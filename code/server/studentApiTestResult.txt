Server listening at http://localhost:3001


  Testing internalOrder API endpoints
    POST on internalOrder
      ✔ POST /api/internalOrders (201)
      ✔ POST /api/internalOrders (201)
    PUT on internalOrder
      ✔ PUT /api/internalOrders/:id (200)
      ✔ PUT /api/internalOrders/:id (404)
      ✔ PUT /api/internalOrders/:id (422)
    GET on internalOrder
      ✔ GET /api/internalOrders (200)
      ✔ GET /api/internalOrdersIssued (200)
      ✔ GET /api/internalOrdersAccepted (200)
      ✔ GET /api/internalOrders/:id (200)
    DELETE on internalOrder
      ✔ DELETE /api/internalOrders/:id (204)
      ✔ DELETE /api/internalOrders/:id (204)

  Testing item API endpoints
    POST on item
      ✔ POST /api/item (201)
      ✔ POST /api/item (404)
    PUT on item
      1) PUT /api/item/:id (200)
      ✔ PUT /api/item/:id (404)
    GET on item
      ✔ GET /api/items (200)
      2) GET /api/items/:id (200)
      ✔ GET /api/items/:id (404)
    DELETE on item
      3) DELETE /api/items/:id (204)

  CRUD on position (test position with id = 800234543412)
    ✔ POST /api/position
    ✔ GET /api/positions created
    ✔ PUT /api/position/800234543412
    ✔ GET /api/positions modified
    ✔ PUT /api/position/111122223333/changeID
    ✔ GET /api/positions id modified
    ✔ DELETE /api/position/800234543412
    ✔ PUT /api/position/800234543412/changeID inexistent
    ✔ PUT /api/position/AAAABBBBCCCC/changeID invalid

  Testing restockOrder API endpoints
    POST on restockOrder
      ✔ POST /api/restockOrder (201)
      ✔ POST /api/restockOrder (201)
      ✔ POST /api/restockOrder (422)
    PUT on restockOrder
      ✔ PUT /api/restockOrder/:id (200)
      ✔ PUT /api/restockOrder/:id/skuItems (200)
      ✔ PUT /api/restockOrder/:id/skuItems (404)
      ✔ PUT /api/restockOrder/:id/transportNote (200)
      ✔ PUT /api/restockOrder/:id/transportNote (404)
    GET on restockOrder
      ✔ GET /api/restockOrders (200)
      ✔ GET /api/restockOrdersIssued (200)
      4) GET /api/restockOrders/:id (200)
      ✔ GET /api/restockOrders/:id/returnItems (200)
    DELETE on restockOrder
      ✔ DELETE /api/restockOrder/:id (204)
      ✔ DELETE /api/restockOrder/:id (204)

  Testing returnOrder API endpoints
    POST on returnOrder
      ✔ POST /api/returnOrder (201)
      ✔ POST /api/returnOrder (404)
    GET on returnOrder
      ✔ GET /api/returnOrders (200)
      5) GET /api/returnOrders/:id (200)
    DELETE on returnOrder
      ✔ DELETE /api/returnOrder/:id (204)

  CRUD on sku (test two skus with description = "test sku #1719" and "test sku #9999")
    ✔ POST /api/sku 1
    ✔ POST /api/sku 2
    ✔ GET /api/skus created
    ✔ PUT /api/sku/1
    ✔ GET /api/skus/1 by id modified
    6) PUT /api/sku/1/position
    ✔ PUT /api/sku/2/position assigned
    ✔ PUT /api/sku/2/position full
    7) GET /api/skus/1 check position
    ✔ DELETE /api/skus/1
    ✔ DELETE /api/skus/2
    ✔ GET 404 /api/skus/1719
    ✔ POST 422 /api/sku invalid

  CRUD on sku item (test sku with rfid = "12345678901234567890123456789015", skuid="1719")
    ✔ POST /api/skuitem
    ✔ POST /api/skuitem already existing
    ✔ PUT /api/skuitems/12345678901234567890123456789015
    ✔ PUT /api/skuitems/3333444433334444
    ✔ GET /api/skuitems/sku/1
    ✔ DELETE /api/skuitems/11112222
    ✔ DELETE /api/skuitems/11112222
    ✔ GET /api/skuitems empty list
    ✔ POST /api/skuitem inexisting sku
    ✔ POST /api/skuitem invalid

  GET testDescriptor
    ✔ GET /api/testDescriptors
    ✔ GET /api/testDescriptors/1
    ✔ GET /api/testDescriptors/3

  POST testDescriptor
    ✔ POST /api/testDescriptor
    ✔ POST /api/testDescriptor (wrong body)

  PUT testDescriptor
    ✔ PUT /api/testDescriptor/1
    ✔ PUT /api/testDescriptor/1111
    ✔ PUT /api/testDescriptor/WrongId
    ✔ PUT /api/testDescriptor/1 (wrong body)

  DELETE testDescriptor
    ✔ DELETE /api/testDescriptor/1
    ✔ DELETE /api/testDescriptor/1111
    ✔ DELETE /api/testDescriptor/WrongId

  GET testResult
    ✔ GET /api/skuitems/1111/testResults
    ✔ GET /api/skuitems/1111/testResults/1
    ✔ GET /api/skuitems/1111/testResults/3
    ✔ GET /api/skuitems/WrongRFID/testResults

  POST testResult
    ✔ POST /api/skuitems/testResult
    ✔ POST /api/skuitems/testResult (rfid not found)
    ✔ POST /api/skuitems/testResult (test descriptor id not found)
    ✔ POST /api/skuitems/testResult (wrong body)

  PUT testResult
    ✔ PUT /api/skuitems/1111/testResult/1
    ✔ PUT /api/skuitems/WrongRFID/testResult/1
    ✔ PUT /api/skuitems/1111/testResult/1234
    ✔ PUT /api/skuitems/WrongRFID/testResult/WrongId

  DELETE testResult
    ✔ DELETE /api/skuitems/1111/testResult/1
    ✔ DELETE /api/skuitems/WrongRFID/testResult/1
    ✔ DELETE /api/skuitems/1111/testResult/1234
    ✔ DELETE /api/skuitems/1111/testResult/WrongId

  Testing Users
201
    ✔ POST /api/newUser
200
    ✔ POST /api/supplierSessions
200
    ✔ POST /api/qualityEmployeeSessions
200
    ✔ POST /api/deliveryEmployeeSessions
    ✔ POST /api/logout
    8) PUT /api/users/user1357@ezwh.com
    ✔ PUT /api/users/user1357ezwh.com
    ✔ Delete /api/users/user58@ezwh.com/customer


  98 passing (1s)
  8 failing

  1) Testing item API endpoints
       PUT on item
         PUT /api/item/:id (200):

      AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 200 but got 404
      + expected - actual

      -404
      +200
      
      at Context.<anonymous> (test\testItem.js:65:29)
      at processTicksAndRejections (node:internal/process/task_queues:96:5)

  2) Testing item API endpoints
       GET on item
         GET /api/items/:id (200):

      AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 200 but got 404
      + expected - actual

      -404
      +200
      
      at Context.<anonymous> (test\testItem.js:88:29)
      at processTicksAndRejections (node:internal/process/task_queues:96:5)

  3) Testing item API endpoints
       DELETE on item
         DELETE /api/items/:id (204):

      AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 204 but got 404
      + expected - actual

      -404
      +204
      
      at Context.<anonymous> (test\testItem.js:107:29)
      at processTicksAndRejections (node:internal/process/task_queues:96:5)

  4) Testing restockOrder API endpoints
       GET on restockOrder
         GET /api/restockOrders/:id (200):

      AssertionError: expected { Object (id, issueDate, ...) } to deeply equal { Object (id, issueDate, ...) }
      + expected - actual

       {
         "id": 1
         "issueDate": "2022/05/24"
      -  "products": []
      +  "products": [
      +    {
      +      "SKUId": 1
      +      "description": "temporary sku 1"
      +      "price": 10.99
      +      "qty": 30
      +    }
      +  ]
         "skuItems": [
           {
             "SKUId": 1
             "rfid": "123456789"
      
      at Context.<anonymous> (test\testRestockOrder.js:168:38)
      at processTicksAndRejections (node:internal/process/task_queues:96:5)

  5) Testing returnOrder API endpoints
       GET on returnOrder
         GET /api/returnOrders/:id (200):

      AssertionError: expected { id: 1, …(3) } to deeply equal { id: 1, …(3) }
      + expected - actual

       {
         "id": 1
      -  "products": []
      +  "products": [
      +    {
      +      "RFID": "123456789"
      +      "SKUId": 1
      +      "description": "temporary sku 1"
      +      "price": 10.99
      +    }
      +  ]
         "restockOrderId": 1
         "returnDate": "2022/05/24"
       }
      
      at Context.<anonymous> (test\testReturnOrder.js:104:38)
      at processTicksAndRejections (node:internal/process/task_queues:96:5)

  6) CRUD on sku (test two skus with description = "test sku #1719" and "test sku #9999")
       PUT /api/sku/1/position:

      AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 200 but got 422
      + expected - actual

      -422
      +200
      
      at Context.<anonymous> (test\testSku.js:144:24)
      at processTicksAndRejections (node:internal/process/task_queues:96:5)

  7) CRUD on sku (test two skus with description = "test sku #1719" and "test sku #9999")
       GET /api/skus/1 check position:

      AssertionError: expected { id: 1, …(8) } to deeply equal { id: 1, …(8) }
      + expected - actual

         "availableQuantity": 50
         "description": "a new modified sku"
         "id": 1
         "notes": "first modified SKU"
      -  "position": [null]
      +  "position": "100010001000"
         "price": 10.99
         "testDescriptors": []
         "volume": 200
         "weight": 200
      
      at Context.<anonymous> (test\testSku.js:173:37)
      at processTicksAndRejections (node:internal/process/task_queues:96:5)

  8) Testing Users
       PUT /api/users/user1357@ezwh.com:

      AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 200 but got 404
      + expected - actual

      -404
      +200
      
      at Context.<anonymous> (test\testUser.js:82:24)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (node:internal/process/task_queues:96:5)



